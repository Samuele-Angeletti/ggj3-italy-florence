//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inputs/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a220144e-a76a-41a8-977e-868bc908128d"",
            ""actions"": [
                {
                    ""name"": ""WASDMovement"",
                    ""type"": ""Value"",
                    ""id"": ""e45ce919-40f8-49ec-ade6-17efa85a5e4a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ArrowsMovement"",
                    ""type"": ""Value"",
                    ""id"": ""39bfe901-aa6c-4970-a611-8a0fd9188135"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1c05b119-9387-43b3-8ca1-0d66388d4e8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractButton"",
                    ""type"": ""Button"",
                    ""id"": ""7ff720f6-d62c-4a9c-b22c-afe58822906d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""0449d199-5596-4eb5-a977-9ab772f685c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SInteract"",
                    ""type"": ""Button"",
                    ""id"": ""51a37a95-fbb5-41db-844d-7a676582434d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownInteract"",
                    ""type"": ""Button"",
                    ""id"": ""401d8e9c-8a51-4810-9d61-c7b31be0d910"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4c9625aa-b09a-4d96-aa17-30a13d5bb6fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""90d967d4-211f-49db-9579-36213089a0af"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fe41a4f5-67b0-44b1-bf3e-45413d8128e1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e6d0210f-ec08-4558-adf8-eebfeb4b20f1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d5196932-0679-4e6d-8554-d16e128fd51e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowsMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db2ebe73-4bfa-427f-a307-e2088fd12b94"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowsMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87f06664-bd90-4e96-99f6-c69e05d810c3"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowsMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5f534e8a-b319-4609-a2af-235f66a27364"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowsMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bf012e0d-386b-41b4-9046-04366ff735a9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baae456f-0138-4cf0-a628-ff86d00d65f4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85be7d52-a8b8-4eec-8765-b10a60a1c777"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcfa1898-02ff-42e8-ab35-74949dfc5c98"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dca4cfed-3355-4edf-ae44-7c4492860810"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerMouse"",
            ""id"": ""ba3aa94f-9f1f-4593-a2c9-e8cff1b2aad3"",
            ""actions"": [
                {
                    ""name"": ""LeftMouse"",
                    ""type"": ""Button"",
                    ""id"": ""9aba914c-0eec-42b5-b7a4-45ae4f323742"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightMouse"",
                    ""type"": ""Button"",
                    ""id"": ""367d89f3-4210-4e50-8558-b65f3a1375db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d5d62b0a-cc69-4bbc-8c00-b0e9b8add8fe"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b30bdfa4-803b-4d74-bd1b-fb5194035c44"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerKeyboard"",
            ""id"": ""eb2b2765-c545-481b-bda0-ab326071ad8c"",
            ""actions"": [
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""ab19d141-a5b2-4494-9387-697260e12b8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""afaa8fe2-b899-4163-85d6-94a726168658"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""ae126c46-37f1-4617-9805-7250ab05fd87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""d4369b81-f651-4572-895f-7813a9d2dea9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""5d63f693-eb19-4a6a-ab91-7a8b5f8166b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""1a7aaaf1-4358-42af-a50a-bd75ab966c65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""4697d174-f859-40fb-a985-80715c909588"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""H"",
                    ""type"": ""Button"",
                    ""id"": ""76aad01f-0af4-4166-aaf3-162372d238ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""I"",
                    ""type"": ""Button"",
                    ""id"": ""30aac40e-201b-4dbd-8f36-7751d39c956d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""f933c19d-3a7f-4b19-ad6a-5eb023f6be82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""K"",
                    ""type"": ""Button"",
                    ""id"": ""9c94afd0-f2ab-45cf-8d6a-d73175861198"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""17644b02-7587-4b7e-95f7-5c7816ed33b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""M"",
                    ""type"": ""Button"",
                    ""id"": ""1eab8b0d-1fa9-4a60-96a9-5ffeaa97ae7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""N"",
                    ""type"": ""Button"",
                    ""id"": ""fc9d81a4-af6d-494d-a192-4858d07358b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""O"",
                    ""type"": ""Button"",
                    ""id"": ""88f4dd04-24c5-468c-8bd0-fcb2b49693ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P"",
                    ""type"": ""Button"",
                    ""id"": ""af0c505b-558b-4f63-8bc3-e1c9d2ea70de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""605da96e-5729-48ce-a332-b7679b6b56b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""5a53c49e-cd71-40c1-a431-f514ca3d7b2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""S"",
                    ""type"": ""Button"",
                    ""id"": ""18371925-5807-4b73-b318-0eb17bb2d7a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""T"",
                    ""type"": ""Button"",
                    ""id"": ""629a06f2-c6bf-471c-98b3-b205c8718260"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""U"",
                    ""type"": ""Button"",
                    ""id"": ""46474b9c-0c5b-410c-a547-87f542c2908e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""V"",
                    ""type"": ""Button"",
                    ""id"": ""030e102a-ecd3-43dd-8a91-f600874d3116"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""73c750f1-8ee8-48c5-a556-a6fa6f448a5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""4442d25e-f8a9-4905-ba07-822cfefab3dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""9569f8c1-acf8-42c7-a04b-452cf8f94be9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Z"",
                    ""type"": ""Button"",
                    ""id"": ""c6f64050-27a5-4519-b5b1-5766fd35c4f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backspace"",
                    ""type"": ""Button"",
                    ""id"": ""f9780772-c86c-483b-aa64-368df2e3d564"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6d0f7a1e-a5bd-464c-b213-d73dabb44c08"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fd01b8d-33bc-4a42-b007-01dc4fd4e922"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""def5b49b-517c-4878-ada3-5814f7e512ad"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e1b98af-ff69-45b3-ab30-04c450a734a9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90dc0a70-2597-4be9-a85e-3e9ddccdc1e4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a21a667-592c-4826-a086-a8d2e16e61b4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae8d3379-2062-4340-b1af-f090c4b555aa"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82e2d7ea-9d25-4676-84e0-1b7171aaa0af"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ae6d79c-e119-47d5-9e28-358713ca94a5"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""I"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66b5d9bd-368c-4ab0-b988-77e028f83002"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a06db85-663d-4485-a75e-1a2e9dfdd3b1"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dc4a2fc-07ea-4d91-a87c-a77958ed3038"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e78fee11-b784-4a3f-8e35-b30db10b1cfc"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""M"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b969a5a4-c007-44bd-898d-5163215dc19e"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""N"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a95de30a-9c0b-49ae-a91c-44867fb12e16"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""O"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a2facfd-b71a-4182-a275-fb9286ca14de"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09099993-e2fe-4b7b-b010-2b591dbe42e7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53ed5e83-6fa6-4bee-8735-8c24dd2348e0"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1df8a412-8577-4d32-8765-328bd13c3eda"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""S"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3b2282e-e472-40d1-b5c6-62fb7bb18bbb"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""T"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca49c6e2-fa69-45fb-9826-da65cd4a23f5"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""U"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a471241-2301-444a-9850-1715d1659ec5"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""380cdd26-31dd-4aec-aa0e-f4ea04da5f75"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e06dc76b-fa80-4795-8d32-f45f4b79a5da"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c458ae5-ec73-4758-98f2-6914c331ce81"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1391163-0225-4658-bcc1-89ca1f982712"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Z"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f27fc52-c0e5-4d98-8cea-2cf34d630ab8"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backspace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_WASDMovement = m_Player.FindAction("WASDMovement", throwIfNotFound: true);
        m_Player_ArrowsMovement = m_Player.FindAction("ArrowsMovement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_InteractButton = m_Player.FindAction("InteractButton", throwIfNotFound: true);
        m_Player_Shift = m_Player.FindAction("Shift", throwIfNotFound: true);
        m_Player_SInteract = m_Player.FindAction("SInteract", throwIfNotFound: true);
        m_Player_DownInteract = m_Player.FindAction("DownInteract", throwIfNotFound: true);
        // PlayerMouse
        m_PlayerMouse = asset.FindActionMap("PlayerMouse", throwIfNotFound: true);
        m_PlayerMouse_LeftMouse = m_PlayerMouse.FindAction("LeftMouse", throwIfNotFound: true);
        m_PlayerMouse_RightMouse = m_PlayerMouse.FindAction("RightMouse", throwIfNotFound: true);
        // PlayerKeyboard
        m_PlayerKeyboard = asset.FindActionMap("PlayerKeyboard", throwIfNotFound: true);
        m_PlayerKeyboard_A = m_PlayerKeyboard.FindAction("A", throwIfNotFound: true);
        m_PlayerKeyboard_B = m_PlayerKeyboard.FindAction("B", throwIfNotFound: true);
        m_PlayerKeyboard_C = m_PlayerKeyboard.FindAction("C", throwIfNotFound: true);
        m_PlayerKeyboard_D = m_PlayerKeyboard.FindAction("D", throwIfNotFound: true);
        m_PlayerKeyboard_E = m_PlayerKeyboard.FindAction("E", throwIfNotFound: true);
        m_PlayerKeyboard_F = m_PlayerKeyboard.FindAction("F", throwIfNotFound: true);
        m_PlayerKeyboard_G = m_PlayerKeyboard.FindAction("G", throwIfNotFound: true);
        m_PlayerKeyboard_H = m_PlayerKeyboard.FindAction("H", throwIfNotFound: true);
        m_PlayerKeyboard_I = m_PlayerKeyboard.FindAction("I", throwIfNotFound: true);
        m_PlayerKeyboard_J = m_PlayerKeyboard.FindAction("J", throwIfNotFound: true);
        m_PlayerKeyboard_K = m_PlayerKeyboard.FindAction("K", throwIfNotFound: true);
        m_PlayerKeyboard_L = m_PlayerKeyboard.FindAction("L", throwIfNotFound: true);
        m_PlayerKeyboard_M = m_PlayerKeyboard.FindAction("M", throwIfNotFound: true);
        m_PlayerKeyboard_N = m_PlayerKeyboard.FindAction("N", throwIfNotFound: true);
        m_PlayerKeyboard_O = m_PlayerKeyboard.FindAction("O", throwIfNotFound: true);
        m_PlayerKeyboard_P = m_PlayerKeyboard.FindAction("P", throwIfNotFound: true);
        m_PlayerKeyboard_Q = m_PlayerKeyboard.FindAction("Q", throwIfNotFound: true);
        m_PlayerKeyboard_R = m_PlayerKeyboard.FindAction("R", throwIfNotFound: true);
        m_PlayerKeyboard_S = m_PlayerKeyboard.FindAction("S", throwIfNotFound: true);
        m_PlayerKeyboard_T = m_PlayerKeyboard.FindAction("T", throwIfNotFound: true);
        m_PlayerKeyboard_U = m_PlayerKeyboard.FindAction("U", throwIfNotFound: true);
        m_PlayerKeyboard_V = m_PlayerKeyboard.FindAction("V", throwIfNotFound: true);
        m_PlayerKeyboard_W = m_PlayerKeyboard.FindAction("W", throwIfNotFound: true);
        m_PlayerKeyboard_X = m_PlayerKeyboard.FindAction("X", throwIfNotFound: true);
        m_PlayerKeyboard_Y = m_PlayerKeyboard.FindAction("Y", throwIfNotFound: true);
        m_PlayerKeyboard_Z = m_PlayerKeyboard.FindAction("Z", throwIfNotFound: true);
        m_PlayerKeyboard_Backspace = m_PlayerKeyboard.FindAction("Backspace", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_WASDMovement;
    private readonly InputAction m_Player_ArrowsMovement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_InteractButton;
    private readonly InputAction m_Player_Shift;
    private readonly InputAction m_Player_SInteract;
    private readonly InputAction m_Player_DownInteract;
    public struct PlayerActions
    {
        private @InputSystem m_Wrapper;
        public PlayerActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @WASDMovement => m_Wrapper.m_Player_WASDMovement;
        public InputAction @ArrowsMovement => m_Wrapper.m_Player_ArrowsMovement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @InteractButton => m_Wrapper.m_Player_InteractButton;
        public InputAction @Shift => m_Wrapper.m_Player_Shift;
        public InputAction @SInteract => m_Wrapper.m_Player_SInteract;
        public InputAction @DownInteract => m_Wrapper.m_Player_DownInteract;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @WASDMovement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWASDMovement;
                @WASDMovement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWASDMovement;
                @WASDMovement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWASDMovement;
                @ArrowsMovement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowsMovement;
                @ArrowsMovement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowsMovement;
                @ArrowsMovement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowsMovement;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @InteractButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractButton;
                @InteractButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractButton;
                @InteractButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractButton;
                @Shift.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @Shift.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @Shift.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @SInteract.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSInteract;
                @SInteract.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSInteract;
                @SInteract.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSInteract;
                @DownInteract.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownInteract;
                @DownInteract.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownInteract;
                @DownInteract.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownInteract;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @WASDMovement.started += instance.OnWASDMovement;
                @WASDMovement.performed += instance.OnWASDMovement;
                @WASDMovement.canceled += instance.OnWASDMovement;
                @ArrowsMovement.started += instance.OnArrowsMovement;
                @ArrowsMovement.performed += instance.OnArrowsMovement;
                @ArrowsMovement.canceled += instance.OnArrowsMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @InteractButton.started += instance.OnInteractButton;
                @InteractButton.performed += instance.OnInteractButton;
                @InteractButton.canceled += instance.OnInteractButton;
                @Shift.started += instance.OnShift;
                @Shift.performed += instance.OnShift;
                @Shift.canceled += instance.OnShift;
                @SInteract.started += instance.OnSInteract;
                @SInteract.performed += instance.OnSInteract;
                @SInteract.canceled += instance.OnSInteract;
                @DownInteract.started += instance.OnDownInteract;
                @DownInteract.performed += instance.OnDownInteract;
                @DownInteract.canceled += instance.OnDownInteract;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // PlayerMouse
    private readonly InputActionMap m_PlayerMouse;
    private IPlayerMouseActions m_PlayerMouseActionsCallbackInterface;
    private readonly InputAction m_PlayerMouse_LeftMouse;
    private readonly InputAction m_PlayerMouse_RightMouse;
    public struct PlayerMouseActions
    {
        private @InputSystem m_Wrapper;
        public PlayerMouseActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftMouse => m_Wrapper.m_PlayerMouse_LeftMouse;
        public InputAction @RightMouse => m_Wrapper.m_PlayerMouse_RightMouse;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMouseActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMouseActions instance)
        {
            if (m_Wrapper.m_PlayerMouseActionsCallbackInterface != null)
            {
                @LeftMouse.started -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnLeftMouse;
                @LeftMouse.performed -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnLeftMouse;
                @LeftMouse.canceled -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnLeftMouse;
                @RightMouse.started -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnRightMouse;
                @RightMouse.performed -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnRightMouse;
                @RightMouse.canceled -= m_Wrapper.m_PlayerMouseActionsCallbackInterface.OnRightMouse;
            }
            m_Wrapper.m_PlayerMouseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftMouse.started += instance.OnLeftMouse;
                @LeftMouse.performed += instance.OnLeftMouse;
                @LeftMouse.canceled += instance.OnLeftMouse;
                @RightMouse.started += instance.OnRightMouse;
                @RightMouse.performed += instance.OnRightMouse;
                @RightMouse.canceled += instance.OnRightMouse;
            }
        }
    }
    public PlayerMouseActions @PlayerMouse => new PlayerMouseActions(this);

    // PlayerKeyboard
    private readonly InputActionMap m_PlayerKeyboard;
    private IPlayerKeyboardActions m_PlayerKeyboardActionsCallbackInterface;
    private readonly InputAction m_PlayerKeyboard_A;
    private readonly InputAction m_PlayerKeyboard_B;
    private readonly InputAction m_PlayerKeyboard_C;
    private readonly InputAction m_PlayerKeyboard_D;
    private readonly InputAction m_PlayerKeyboard_E;
    private readonly InputAction m_PlayerKeyboard_F;
    private readonly InputAction m_PlayerKeyboard_G;
    private readonly InputAction m_PlayerKeyboard_H;
    private readonly InputAction m_PlayerKeyboard_I;
    private readonly InputAction m_PlayerKeyboard_J;
    private readonly InputAction m_PlayerKeyboard_K;
    private readonly InputAction m_PlayerKeyboard_L;
    private readonly InputAction m_PlayerKeyboard_M;
    private readonly InputAction m_PlayerKeyboard_N;
    private readonly InputAction m_PlayerKeyboard_O;
    private readonly InputAction m_PlayerKeyboard_P;
    private readonly InputAction m_PlayerKeyboard_Q;
    private readonly InputAction m_PlayerKeyboard_R;
    private readonly InputAction m_PlayerKeyboard_S;
    private readonly InputAction m_PlayerKeyboard_T;
    private readonly InputAction m_PlayerKeyboard_U;
    private readonly InputAction m_PlayerKeyboard_V;
    private readonly InputAction m_PlayerKeyboard_W;
    private readonly InputAction m_PlayerKeyboard_X;
    private readonly InputAction m_PlayerKeyboard_Y;
    private readonly InputAction m_PlayerKeyboard_Z;
    private readonly InputAction m_PlayerKeyboard_Backspace;
    public struct PlayerKeyboardActions
    {
        private @InputSystem m_Wrapper;
        public PlayerKeyboardActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @A => m_Wrapper.m_PlayerKeyboard_A;
        public InputAction @B => m_Wrapper.m_PlayerKeyboard_B;
        public InputAction @C => m_Wrapper.m_PlayerKeyboard_C;
        public InputAction @D => m_Wrapper.m_PlayerKeyboard_D;
        public InputAction @E => m_Wrapper.m_PlayerKeyboard_E;
        public InputAction @F => m_Wrapper.m_PlayerKeyboard_F;
        public InputAction @G => m_Wrapper.m_PlayerKeyboard_G;
        public InputAction @H => m_Wrapper.m_PlayerKeyboard_H;
        public InputAction @I => m_Wrapper.m_PlayerKeyboard_I;
        public InputAction @J => m_Wrapper.m_PlayerKeyboard_J;
        public InputAction @K => m_Wrapper.m_PlayerKeyboard_K;
        public InputAction @L => m_Wrapper.m_PlayerKeyboard_L;
        public InputAction @M => m_Wrapper.m_PlayerKeyboard_M;
        public InputAction @N => m_Wrapper.m_PlayerKeyboard_N;
        public InputAction @O => m_Wrapper.m_PlayerKeyboard_O;
        public InputAction @P => m_Wrapper.m_PlayerKeyboard_P;
        public InputAction @Q => m_Wrapper.m_PlayerKeyboard_Q;
        public InputAction @R => m_Wrapper.m_PlayerKeyboard_R;
        public InputAction @S => m_Wrapper.m_PlayerKeyboard_S;
        public InputAction @T => m_Wrapper.m_PlayerKeyboard_T;
        public InputAction @U => m_Wrapper.m_PlayerKeyboard_U;
        public InputAction @V => m_Wrapper.m_PlayerKeyboard_V;
        public InputAction @W => m_Wrapper.m_PlayerKeyboard_W;
        public InputAction @X => m_Wrapper.m_PlayerKeyboard_X;
        public InputAction @Y => m_Wrapper.m_PlayerKeyboard_Y;
        public InputAction @Z => m_Wrapper.m_PlayerKeyboard_Z;
        public InputAction @Backspace => m_Wrapper.m_PlayerKeyboard_Backspace;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerKeyboardActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardActionsCallbackInterface != null)
            {
                @A.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnA;
                @B.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnB;
                @C.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnC;
                @C.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnC;
                @C.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnC;
                @D.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnD;
                @D.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnD;
                @D.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnD;
                @E.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnE;
                @E.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnE;
                @E.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnE;
                @F.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnF;
                @F.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnF;
                @F.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnF;
                @G.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnG;
                @G.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnG;
                @G.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnG;
                @H.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnH;
                @H.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnH;
                @H.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnH;
                @I.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnI;
                @I.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnI;
                @I.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnI;
                @J.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnJ;
                @J.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnJ;
                @J.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnJ;
                @K.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnK;
                @K.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnK;
                @K.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnK;
                @L.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnL;
                @L.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnL;
                @L.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnL;
                @M.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnM;
                @M.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnM;
                @M.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnM;
                @N.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnN;
                @N.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnN;
                @N.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnN;
                @O.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnO;
                @O.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnO;
                @O.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnO;
                @P.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnP;
                @P.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnP;
                @P.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnP;
                @Q.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnQ;
                @Q.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnQ;
                @Q.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnQ;
                @R.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnR;
                @S.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnS;
                @S.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnS;
                @S.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnS;
                @T.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnT;
                @T.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnT;
                @T.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnT;
                @U.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnU;
                @U.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnU;
                @U.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnU;
                @V.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnV;
                @V.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnV;
                @V.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnV;
                @W.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnW;
                @W.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnW;
                @W.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnW;
                @X.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnX;
                @Y.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnY;
                @Z.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnZ;
                @Z.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnZ;
                @Z.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnZ;
                @Backspace.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBackspace;
                @Backspace.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBackspace;
                @Backspace.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBackspace;
            }
            m_Wrapper.m_PlayerKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @C.started += instance.OnC;
                @C.performed += instance.OnC;
                @C.canceled += instance.OnC;
                @D.started += instance.OnD;
                @D.performed += instance.OnD;
                @D.canceled += instance.OnD;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @G.started += instance.OnG;
                @G.performed += instance.OnG;
                @G.canceled += instance.OnG;
                @H.started += instance.OnH;
                @H.performed += instance.OnH;
                @H.canceled += instance.OnH;
                @I.started += instance.OnI;
                @I.performed += instance.OnI;
                @I.canceled += instance.OnI;
                @J.started += instance.OnJ;
                @J.performed += instance.OnJ;
                @J.canceled += instance.OnJ;
                @K.started += instance.OnK;
                @K.performed += instance.OnK;
                @K.canceled += instance.OnK;
                @L.started += instance.OnL;
                @L.performed += instance.OnL;
                @L.canceled += instance.OnL;
                @M.started += instance.OnM;
                @M.performed += instance.OnM;
                @M.canceled += instance.OnM;
                @N.started += instance.OnN;
                @N.performed += instance.OnN;
                @N.canceled += instance.OnN;
                @O.started += instance.OnO;
                @O.performed += instance.OnO;
                @O.canceled += instance.OnO;
                @P.started += instance.OnP;
                @P.performed += instance.OnP;
                @P.canceled += instance.OnP;
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @S.started += instance.OnS;
                @S.performed += instance.OnS;
                @S.canceled += instance.OnS;
                @T.started += instance.OnT;
                @T.performed += instance.OnT;
                @T.canceled += instance.OnT;
                @U.started += instance.OnU;
                @U.performed += instance.OnU;
                @U.canceled += instance.OnU;
                @V.started += instance.OnV;
                @V.performed += instance.OnV;
                @V.canceled += instance.OnV;
                @W.started += instance.OnW;
                @W.performed += instance.OnW;
                @W.canceled += instance.OnW;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @Z.started += instance.OnZ;
                @Z.performed += instance.OnZ;
                @Z.canceled += instance.OnZ;
                @Backspace.started += instance.OnBackspace;
                @Backspace.performed += instance.OnBackspace;
                @Backspace.canceled += instance.OnBackspace;
            }
        }
    }
    public PlayerKeyboardActions @PlayerKeyboard => new PlayerKeyboardActions(this);
    public interface IPlayerActions
    {
        void OnWASDMovement(InputAction.CallbackContext context);
        void OnArrowsMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInteractButton(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
        void OnSInteract(InputAction.CallbackContext context);
        void OnDownInteract(InputAction.CallbackContext context);
    }
    public interface IPlayerMouseActions
    {
        void OnLeftMouse(InputAction.CallbackContext context);
        void OnRightMouse(InputAction.CallbackContext context);
    }
    public interface IPlayerKeyboardActions
    {
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnG(InputAction.CallbackContext context);
        void OnH(InputAction.CallbackContext context);
        void OnI(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnK(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnM(InputAction.CallbackContext context);
        void OnN(InputAction.CallbackContext context);
        void OnO(InputAction.CallbackContext context);
        void OnP(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnS(InputAction.CallbackContext context);
        void OnT(InputAction.CallbackContext context);
        void OnU(InputAction.CallbackContext context);
        void OnV(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnZ(InputAction.CallbackContext context);
        void OnBackspace(InputAction.CallbackContext context);
    }
}
